{"version":3,"sources":["logo.svg","components/Navbar.jsx","api/API.jsx","img/vs-img.png","components/MatchInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","IconButton","color","Typography","variant","API_KEY","MatchInfo","match","useState","detail","setDetails","open","setOpen","handleClick","id","url","fetch","then","response","json","catch","error","console","log","getMatchDetail","data","handleOpen","handleClose","Card","style","marginTop","padding","CardContent","Grid","container","justify","spacing","alignItems","item","width","src","vs","alt","CardActions","Button","Date","dateTimeGMT","toLocaleString","marginLeft","onClick","unique_id","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autoFocus","App","matches","setMatches","useEffect","getMathes","className","sm","map","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4fcdaca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\">IPL 2021</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n};\r\nexport default Navbar;","const API_KEY=\"lfDfM4mqxbMcJ7IzqQVyXfQJT852\";\r\n\r\n// Get All Matchs [up-coming matches]\r\n\r\nexport const getMathes = () =>{\r\n    const url = `https://cricapi.com/api/matches?apikey=${API_KEY}`;\r\n\r\n    return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error)=>console.log(\"Error: \", error));\r\n}\r\n\r\n// Load Match Details\r\nexport const getMatchDetail = (id) =>{\r\n    const url = `https://cricapi.com/api/cricketScore?apikey=${API_KEY}&unique_id=${id}`;\r\n\r\n    return fetch(url)\r\n    .then((response)=>response.json())\r\n    .catch((error)=>console.log(\"Error: \", error));\r\n}","export default __webpack_public_path__ + \"static/media/vs-img.1fee9b0b.png\";","import { Button, Card, CardContent, Typography, CardActions, Grid, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { getMatchDetail } from \"../api/API\";\r\nimport vs from '../img/vs-img.png';\r\n\r\nconst MatchInfo = ({ match }) => {\r\n\r\n    const [detail, setDetails] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClick = (id) => {\r\n        getMatchDetail(id)\r\n            .then((data) => {\r\n                setDetails(data);\r\n                handleOpen();\r\n            })\r\n            .catch((error) => console.log(\"Error\"))\r\n    }\r\n    const getMatchCard = () => {\r\n        return (\r\n            <Card style={{ marginTop: 20, padding: 20 }}>\r\n                <CardContent>\r\n                    <Grid container justify=\"center\" spacing={4} alignItems=\"center\">\r\n                        <Grid item style={{ width: 150 }}>\r\n                            <Typography variant=\"h5\">{match['team-1']}</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <img style={{ width: 95 }} src={vs} alt=\"vsImg\" />\r\n                        </Grid>\r\n                        <Grid item style={{ width: 150 }}>\r\n                            <Typography variant=\"h5\">{match['team-2']}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify=\"center\">\r\n                        <Button style={{ marginTop: 5 }} item variant=\"outlined\" color=\"primary\">\r\n                            Start Time: {new Date(match.dateTimeGMT).toLocaleString()}\r\n                        </Button>\r\n                        <Button style={{ marginLeft: 5, marginTop: 5 }} item variant=\"contained\" color=\"primary\" onClick={() => handleClick(match.unique_id)}>\r\n                            Show Detail\r\n                        </Button>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const getDialog = () => (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Match Detail...\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Typography>{detail.stat}</Typography>\r\n                    <Typography>\r\n                        Match: <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>{detail.matchStarted ? \"Started\" : \"Still Not Started\"}</span>\r\n                    </Typography>\r\n                    <Typography>\r\n                        Score: <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>{detail.score}</span>\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" autoFocus>CLOSE</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n    return (\r\n        <Fragment>\r\n            {getMatchCard()}\r\n            {getDialog()}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default MatchInfo","import React, { Fragment, useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport Navbar from './components/Navbar';\nimport MatchInfo from './components/MatchInfo';\nimport { getMathes } from './api/API';\n\nfunction App() {\n\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    getMathes()\n      .then((data) => {\n        setMatches(data.matches);\n      })\n      .catch((error) => console.log(\"Could not load Data\"));\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Typography variant=\"h4\" style={{marginTop: 20}}>Welcome To IPL 2021 Live Score</Typography>\n      <Grid container>\n        <Grid sm=\"2\"></Grid>\n          <Grid sm=\"8\">\n            {\n              matches.map((match) => (\n                <Fragment key={match.unique_id}>\n                  {\n                    (match.type==\"\" ? (<MatchInfo  match={match} />) : (\"\"))\n                  }\n                </Fragment>\n              ))\n            }\n        </Grid>\n      </Grid>\n      {}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}